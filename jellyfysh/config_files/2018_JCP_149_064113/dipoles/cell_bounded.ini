# JeLLFysh - a Python application for all-atom event-chain Monte Carlo - https://github.com/jellyfysh
# Copyright (C) 2019, 2022 The JeLLyFysh organization
# (See the AUTHORS.md file for the full list of authors.)
#
# This file is part of JeLLyFysh.
#
# JeLLyFysh is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# JeLLyFysh is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with JeLLyFysh in the LICENSE file.
# If not, see <https://www.gnu.org/licenses/>.
#
# If you use JeLLyFysh in published work, please cite the following reference (see [Hoellmer2020] in References.bib):
# Philipp Hoellmer, Liang Qin, Michael F. Faulkner, A. C. Maggs, and Werner Krauth,
# JeLLyFysh-Version1.0 -- a Python application for all-atom event-chain Monte Carlo,
# Computer Physics Communications, Volume 253, 107168 (2020), https://doi.org/10.1016/j.cpc.2020.107168.
#
[Run]
mediator = single_process_mediator
setting = hypercubic_setting

[HypercubicSetting]
system_length = 1
beta = 1
dimension = 3

[SingleProcessMediator]
state_handler = tree_state_handler
scheduler = heap_scheduler
activator = tag_activator
input_output_handler = input_output_handler

[TagActivator]
taggers =
    coulomb_cell_bounding (cell_bounding_potential_tagger),
    coulomb_nearby (excluded_cells_tagger),
    coulomb_surplus (surplus_cells_tagger),
    cell_boundary (cell_boundary_tagger),
    harmonic (factor_type_map_in_state_tagger),
    repulsive (factor_type_map_in_state_tagger),
    sampling (no_in_state_tagger),
    end_of_chain (active_global_state_in_state_tagger),
    end_of_run (no_in_state_tagger),
    start_of_run (no_in_state_tagger)
internal_states = single_active_cell_occupancy

[CoulombCellBounding]
create = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive
trash = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive
event_handler = two_composite_object_cell_bounding_potential_event_handler
internal_state_label = single_active_cell_occupancy
number_event_handlers = 1

[TwoCompositeObjectCellBoundingPotentialEventHandler]
potential = merged_image_coulomb_potential
bounding_potential = cell_bounding_potential
lifting = inside_first_lifting
charge = electric_charge

[CellBoundingPotential]
estimator = dipole_monte_carlo_estimator

[DipoleMonteCarloEstimator]
potential = merged_image_coulomb_potential
dipole_separation = 0.1
dipole_charge = 1.0
prefactor = 2.0
number_trials = 1000

[CoulombNearby]
create = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive
trash = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive
internal_state_label = single_active_cell_occupancy
event_handler = two_composite_object_summed_bounding_potential_event_handler
number_event_handlers = 1

[TwoCompositeObjectSummedBoundingPotentialEventHandler]
potential = merged_image_coulomb_potential
bounding_potential = inverse_power_coulomb_bounding_potential
lifting = inside_first_lifting
charge = electric_charge

[CoulombSurplus]
create = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive
trash = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive
internal_state_label = single_active_cell_occupancy
event_handler = two_composite_object_summed_bounding_potential_event_handler
number_event_handlers = 1

[CellBoundary]
create = coulomb_nearby, coulomb_cell_bounding, cell_boundary, coulomb_surplus
trash = coulomb_nearby, coulomb_cell_bounding, cell_boundary, coulomb_surplus
internal_state_label = single_active_cell_occupancy
event_handler = cell_boundary_event_handler

[SingleActiveCellOccupancy]
cells = cuboid_periodic_cells
cell_level = 1

[CuboidPeriodicCells]
cells_per_side = 3, 5, 7

[Harmonic]
create = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive
trash = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive
event_handler = harmonic_event_handler (two_leaf_unit_event_handler)
number_event_handlers = 1
factor_type_maps = factor_type_maps

[HarmonicEventHandler]
potential = harmonic_potential (displaced_even_power_potential)

[HarmonicPotential]
equilibrium_separation = 0.1
prefactor = 200
power = 2

[Repulsive]
create = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive
trash = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive
event_handler = repulsive_event_handler (two_leaf_unit_event_handler)
number_event_handlers = 1
factor_type_maps = factor_type_maps

[RepulsiveEventHandler]
potential = repulsive_potential (inverse_power_potential)

[RepulsivePotential]
prefactor = 1.e-6
power = 6

[FactorTypeMaps]
filename = config_files/factor_set_files/factor_set_dipoles_dipole.txt

[Sampling]
create = sampling
trash = sampling
event_handler = fixed_interval_sampling_event_handler

[FixedIntervalSamplingEventHandler]
sampling_interval = 0.56789
output_handler = separation_output_handler

[EndOfChain]
create = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive, end_of_chain
trash = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive, end_of_chain
event_handler = single_independent_active_periodic_direction_end_of_chain_event_handler

[SingleIndependentActivePeriodicDirectionEndOfChainEventHandler]
chain_time = 0.78965

[EndOfRun]
create = end_of_run
trash = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive, sampling, end_of_chain, end_of_run
event_handler = final_time_end_of_run_event_handler

[FinalTimeEndOfRunEventHandler]
end_of_run_time = 500000

[StartOfRun]
trash = start_of_run
create = coulomb_cell_bounding, coulomb_nearby, coulomb_surplus, cell_boundary, harmonic, repulsive, sampling, end_of_chain, end_of_run
event_handler = initial_chain_start_of_run_event_handler

[InitialChainStartOfRunEventHandler]
initial_direction_of_motion = 0
speed = 1.0
initial_active_identifier = 0, 0

[TreeStateHandler]
physical_state = tree_physical_state
lifting_state = tree_lifting_state

[InputOutputHandler]
output_handlers = separation_output_handler
input_handler = random_input_handler

[RandomInputHandler]
random_node_creator = dipole_random_node_creator
number_of_root_nodes = 2

[DipoleRandomNodeCreator]
charge_values = electric_charge_values (charge_values)

[ElectricChargeValues]
charge_name = electric_charge
charge_values = 1, -1

[SeparationOutputHandler]
filename = output/2018_JCP_149_064113/dipoles/SamplesOfSeparation_CellBounded.dat